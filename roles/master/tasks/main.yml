---
# tasks file for master
- name: Reset Kubernetes Master
  shell: kubeadm reset -f
  register: kubeadm_reset

- name: Cleanup IPTables
  shell: iptables -F && iptables -t nat -F && iptables -t mangle -F && iptables -X
  register: kubeadm_reset

- name: "Initialize Master {{ kubernetes_version }}"
  shell: kubeadm init --apiserver-advertise-address={{ ansible_default_ipv4.address }} --token={{ token }} --kubernetes-version={{ kubernetes_version }} --pod-network-cidr={{ podnet }}
  register: kubeadm_init
  when: kubeadm_reset is succeeded

- name: Create Kubernetes config directory
  file:
    path: /root/.kube/
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy admin.conf to config directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    owner: root
    group: root
    mode: 0755
    remote_src: yes
    backup: yes
  when: kubeadm_init

- name: Join Kubernetes Cluster
  shell: kubeadm join --ignore-preflight-errors=all --token {{ token }} {{ groups['master'][0] }}:6443 --discovery-token-unsafe-skip-ca-verification
  when: kubeadm_reset is succeeded
  register: kubeadm_join

- name: Install CNI Weave Net (Networking)
  shell: "curl -sSL https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n') | kubectl apply -f -"
  warn: False

- name: Poke kubelet
  systemd:
    name: kubelet
    state: restarted
    daemon_reload: yes
    enabled: yes
  register: kubelet_poke

# The k8s module requires python modules openshift, pyyaml - will install later
#- name: Update CoreDNS
#  k8s:
#    definition: "{{ lookup('file', 'coredns.yaml') }}"
#    state: present

- name: Fetch kubeconfig file
  fetch:
    src: /root/.kube/config
    dest: ~/.kube/rpi-kubeconfig
    flat: yes
